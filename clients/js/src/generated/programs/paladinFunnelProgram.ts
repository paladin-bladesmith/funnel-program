/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/kinobi-so/kinobi
 */

import { containsBytes, getU8Encoder, type Address } from '@solana/web3.js';
import { type ParsedDistributeRewardsInstruction } from '../instructions';

export const PALADIN_FUNNEL_PROGRAM_PROGRAM_ADDRESS =
  'CF2na53jt22yAQpkw2Uqc1KSNyfiR5p1NzV9XGUa7UbR' as Address<'CF2na53jt22yAQpkw2Uqc1KSNyfiR5p1NzV9XGUa7UbR'>;

export enum PaladinFunnelProgramInstruction {
  DistributeRewards,
}

export function identifyPaladinFunnelProgramInstruction(
  instruction: { data: Uint8Array } | Uint8Array
): PaladinFunnelProgramInstruction {
  const data =
    instruction instanceof Uint8Array ? instruction : instruction.data;
  if (containsBytes(data, getU8Encoder().encode(0), 0)) {
    return PaladinFunnelProgramInstruction.DistributeRewards;
  }
  throw new Error(
    'The provided instruction could not be identified as a paladinFunnelProgram instruction.'
  );
}

export type ParsedPaladinFunnelProgramInstruction<
  TProgram extends string = 'CF2na53jt22yAQpkw2Uqc1KSNyfiR5p1NzV9XGUa7UbR',
> = {
  instructionType: PaladinFunnelProgramInstruction.DistributeRewards;
} & ParsedDistributeRewardsInstruction<TProgram>;
